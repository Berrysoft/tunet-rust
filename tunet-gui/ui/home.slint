import { Button, ComboBox, GridBox, HorizontalBox, VerticalBox } from "std-widgets.slint";

export struct NetInfo {
    username: string,
    flux-gb: float,
    flux-str: string,
    online-time: string,
    balance: float,
    balance-str: string,
}

export global HomeModel {
    in property <color> theme-color: yellowgreen;
    in property <color> theme-color-t1: yellow;
    in property <color> theme-color-t2: orange;

    in property <string> log;
    in property <bool> busy: false;

    in property <string> status;

    in-out property <int> state;
    callback state_changed(string);

    in property <NetInfo> info;

    function free-angle() -> angle {
        Math.max(50.0 / (root.info.balance + Math.max(50.0, root.info.flux-gb)) * 360deg - 0.01deg, 0deg)
    }

    function flux-angle() -> angle {
        Math.max(root.info.flux-gb / (root.info.balance + Math.max(50.0, root.info.flux-gb)) * 360deg - 0.01deg, 0deg)
    }

    callback login();
    callback logout();
    callback refresh();
}

export component HomePage inherits VerticalBox {
    HorizontalBox {
        ComboBox {
            model: ["Net", "Auth4", "Auth6"];
            current-index: HomeModel.state;
            selected(s) => { HomeModel.state-changed(s) }
        }
    }
    GridBox {
        Path {
            row: 0;
            col: 0;
            rowspan: 3;
            colspan: 3;
            stroke: HomeModel.theme-color-t2;
            stroke-width: 30px;
            MoveTo { x: 50; y: 100; }
            ArcTo {
                radius-x: 50;
                radius-y: 50;
                large-arc: true;
                sweep: true;
                x: 50.001;
                y: 100;
            }
        }
        Path {
            row: 0;
            col: 0;
            rowspan: 3;
            colspan: 3;
            stroke: HomeModel.theme-color-t1;
            stroke-width: 30px;
            viewbox-width: 100;
            viewbox-height: 100;
            MoveTo { x: 50; y: 100; }
            ArcTo {
                radius-x: 50;
                radius-y: 50;
                large-arc: HomeModel.free-angle() > 180deg;
                sweep: true;
                x: 50 * (1 - Math.sin(HomeModel.free-angle()));
                y: 50 * (1 + Math.cos(HomeModel.free-angle()));
            }
        }
        Path {
            row: 0;
            col: 0;
            rowspan: 3;
            colspan: 3;
            stroke: HomeModel.theme-color;
            stroke-width: 30px;
            viewbox-width: 100;
            viewbox-height: 100;
            MoveTo { x: 50; y: 100; }
            ArcTo {
                radius-x: 50;
                radius-y: 50;
                large-arc: HomeModel.flux-angle() > 180deg;
                sweep: true;
                x: 50 * (1 - Math.sin(HomeModel.flux-angle()));
                y: 50 * (1 + Math.cos(HomeModel.flux-angle()));
            }
        }
        VerticalBox {
            row: 1;
            col: 1;
            Text {
                text: "用户：" + HomeModel.info.username;
            }
            Text {
                text: "流量：" + HomeModel.info.flux-str;
            }
            Text {
                text: "时长：" + HomeModel.info.online-time;
            }
            Text {
                text: "余额：" + HomeModel.info.balance-str;
            }
            Text {
                text: "网络：" + HomeModel.status;
            }
        }
    }
    Text {
        horizontal-alignment: center;
        wrap: word-wrap;
        text: HomeModel.log;
    }
    HorizontalBox {
        Button {
            text: "登录";
            enabled: !HomeModel.busy;
            clicked => { HomeModel.login() }
        }
        Button {
            text: "注销";
            enabled: !HomeModel.busy;
            clicked => { HomeModel.logout() }
        }
        Button {
            text: "刷新";
            enabled: !HomeModel.busy;
            clicked => { HomeModel.refresh() }
        }
    }
}
