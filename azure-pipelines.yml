trigger:
  branches:
    include:
      - master
  paths:
    exclude:
      - .github/
      - assets/
      - README.md

jobs:
- job: Build
  strategy:
    matrix:
      win-x64:
        image: 'windows-latest'
        target: 'x86_64-pc-windows-msvc'
        publishName: 'win.x86_64'
        postfix: '.exe'
      win-x86:
        image: 'windows-latest'
        target: 'i686-pc-windows-msvc'
        publishName: 'win.i686'
        postfix: '.exe'
      win-arm64:
        image: 'windows-latest'
        target: 'aarch64-pc-windows-msvc'
        publishName: 'win.aarch64'
        postfix: '.exe'
      linux-x64:
        image: 'ubuntu-20.04'
        target: 'x86_64-unknown-linux-gnu'
        publishName: 'linux.x86_64'
        postfix: ''
  pool:
    vmImage: $(image)
  
  steps:
  - script: |
      rustup target add $(target)
      cargo build --release --target $(target)
    displayName: "Build"

  - pwsh: |
      cd target/$(target)/release
      cp tunet$(postfix) $(Build.BinariesDirectory)/
      cp tunet-cui$(postfix) $(Build.BinariesDirectory)/
      cp tunet-gui$(postfix) $(Build.BinariesDirectory)/
      cp tunet-service$(postfix) $(Build.BinariesDirectory)/
    displayName: 'Copy Binaries'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.BinariesDirectory)'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(publishName).zip'
    displayName: 'Archive'

  - task: PublishBuildArtifacts@1
    inputs:
      ArtifactName: 'publish'

- job: Build_Mac
  pool:
    vmImage: 'macOS-11'
  
  steps:
  - script: |
      rustup target add x86_64-apple-darwin
      rustup target add aarch64-apple-darwin
      cargo build --release --target x86_64-apple-darwin
      cargo build --release --target aarch64-apple-darwin
    displayName: "Build"

  - script: |
      lipo -create target/x86_64-apple-darwin/release/tunet target/aarch64-apple-darwin/release/tunet -output $(Build.BinariesDirectory)/tunet
      lipo -create target/x86_64-apple-darwin/release/tunet-cui target/aarch64-apple-darwin/release/tunet-cui -output $(Build.BinariesDirectory)/tunet-cui
      lipo -create target/x86_64-apple-darwin/release/tunet-gui target/aarch64-apple-darwin/release/tunet-gui -output $(Build.BinariesDirectory)/tunet-gui
      lipo -create target/x86_64-apple-darwin/release/tunet-service target/aarch64-apple-darwin/release/tunet-service -output $(Build.BinariesDirectory)/tunet-service
    displayName: "Create fat binary"

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.BinariesDirectory)'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/mac.universal.zip'
    displayName: 'Archive'

  - task: PublishBuildArtifacts@1
    inputs:
      ArtifactName: 'publish'
