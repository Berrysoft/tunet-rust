# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-16.04'
      rid: 'linux-x64'
      exeName: 'tunet'
      libName: 'libtunet_native.so'
    mac:
      imageName: 'macOS-latest'
      rid: 'osx-x64'
      exeName: 'tunet'
      libName: 'libtunet_native.dylib'
    windows:
      imageName: 'windows-latest'
      rid: 'win-x64'
      exeName: 'tunet.exe'
      libName: 'tunet_native.dll'
pool:
  vmImage: $(imageName)

steps:
- script: cargo build --release
  displayName: 'Build'

- task: CopyFiles@2
  displayName: 'Copy binaries'
  inputs:
    SourceFolder: 'target/release/'
    Contents: |
      $(exeName)
      $(libName)
    TargetFolder: '$(Build.ArtifactStagingDirectory)/$(rid)'

- task: CopyFiles@2
  displayName: 'Copy headers'
  condition: eq(variables.rid, 'linux-x64')
  inputs:
    SourceFolder: 'tunet-native/include/'
    Contents: '*.h'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/include'

- task: CopyFiles@2
  displayName: 'Copy debug symbols and import libs'
  condition: eq(variables.rid, 'win-x64')
  inputs:
    SourceFolder: 'target/release/'
    Contents: |
      *.pdb
      *.lib
    TargetFolder: '$(Build.ArtifactStagingDirectory)/$(rid)'

- task: PublishBuildArtifacts@1
  inputs:
    ArtifactName: 'publish'
